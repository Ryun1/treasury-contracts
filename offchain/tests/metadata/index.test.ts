import { Core } from "@blaze-cardano/sdk";
import { describe, expect, it } from "bun:test";

import {
  fromTxMetadata,
  ITransactionMetadata,
  toTxMetadata,
} from "../../src/metadata/shared.js";
import { ETransactionEvent } from "../../src/metadata/types/events.js";

const publishMetadata: ITransactionMetadata = {
  body: {
    event: ETransactionEvent.PUBLISH,
    label: "Sample Instance 12",
    seedUtxo: {
      outputIndex: 1n,
      transactionId:
        "bee1ae94e4ab00990cb15ea38b141a3335f36dacc0d5642224be5dfa40a1b4dd",
    },
    expiration: 1767243600000n,
    description: "Testing new indexing code!",
    permissions: {
      fund: "reorganize",
      pause: "reorganize",
      sweep: "reorganize",
      modify: "reorganize",
      resume: "reorganize",
      disburse: "reorganize",
      reorganize: {
        label: "Pi",
        signature: {
          keyHash: "c279a3fb3b4e62bbc78e288783b58045d4ae82a18867d8352d02775a",
        },
      },
    },
    payoutUpperbound: 1772341200000n,
    vendorExpiration: 1780286400000n,
  },
  "@context": "sundae.fi/sample-context",
  instance: "70440eb757486c4db15559d0c1b2699c20a4a28b5c65585d54689c30",
  txAuthor: "c279a3fb3b4e62bbc78e288783b58045d4ae82a18867d8352d02775a",
  hashAlgorithm: "blake2b-256",
};

const fundMetadata: ITransactionMetadata = {
  body: {
    event: ETransactionEvent.FUND,
    label: "Sample Instance 12",
    description: "Testing new indexing code!",
    identifier: "example-identifier",
    milestones: [
      {
        identifier: "m1",
        acceptanceCriteria:
          "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consectetur cursus odio, non pulvinar ipsum mattis at. Aenean molestie mauris quam, eget pharetra odio auctor vel. Ut venenatis pellentesque eleifend. Quisque sit amet tellus ut nisl porta mattis. Duis ut ultricies lectus. Sed luctus odio nec pharetra tempus. Phasellus hendrerit massa ac erat pulvinar, id viverra purus convallis. Vestibulum tincidunt lobortis fermentum. Sed imperdiet, ipsum ornare ultrices sollicitudin, tortor nibh ultrices urna, a sollicitudin elit risus eget turpis. Praesent enim massa, gravida non faucibus a, porttitor vitae ex.",
        description:
          "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consectetur cursus odio, non pulvinar ipsum mattis at. Aenean molestie mauris quam, eget pharetra odio auctor vel. Ut venenatis pellentesque eleifend. Quisque sit amet tellus ut nisl porta mattis. Duis ut ultricies lectus. Sed luctus odio nec pharetra tempus. Phasellus hendrerit massa ac erat pulvinar, id viverra purus convallis. Vestibulum tincidunt lobortis fermentum. Sed imperdiet, ipsum ornare ultrices sollicitudin, tortor nibh ultrices urna, a sollicitudin elit risus eget turpis. Praesent enim massa, gravida non faucibus a, porttitor vitae ex.",
      },
    ],
    otherIdentifiers: ["identifier-one", "identifier-two", "another-one"],
    vendor: {
      label:
        "addr_test1qrp8nglm8d8x9w783c5g0qa4spzaft5z5xyx0kp495p8wksjrlfzuz6h4ssxlm78v0utlgrhryvl2gvtgp53a6j9zngqtjfk6s",
    },
  },
  "@context": "sundae.fi/sample-context",
  instance: "70440eb757486c4db15559d0c1b2699c20a4a28b5c65585d54689c30",
  txAuthor: "c279a3fb3b4e62bbc78e288783b58045d4ae82a18867d8352d02775a",
  hashAlgorithm: "blake2b-256",
};

describe("toMetadata", () => {
  it("should correctly convert to cbor", () => {
    const result = toTxMetadata(publishMetadata);
    expect(result.toCbor()).toEqual(
      Core.HexBlob(
        "a119069ea56840636f6e74657874781873756e6461652e66692f73616d706c652d636f6e746578746d68617368416c676f726974686d6b626c616b6532622d323536687478417574686f727838633237396133666233623465363262626337386532383837383362353830343564346165383261313838363764383335326430323737356168696e7374616e63657838373034343065623735373438366334646231353535396430633162323639396332306134613238623563363535383564353436383963333064626f6479a8656576656e74677075626c697368656c6162656c7253616d706c6520496e7374616e636520313268736565645574786fa26b6f7574707574496e646578016d7472616e73616374696f6e49647840626565316165393465346162303039393063623135656133386231343161333333356633366461636330643536343232323462653564666134306131623464646a65787069726174696f6e1b0000019b77ed50806b6465736372697074696f6e781a54657374696e67206e657720696e646578696e6720636f6465216b7065726d697373696f6e73a76466756e646a72656f7267616e697a656570617573656a72656f7267616e697a656573776565706a72656f7267616e697a65666d6f646966796a72656f7267616e697a6566726573756d656a72656f7267616e697a656864697362757273656a72656f7267616e697a656a72656f7267616e697a65a2656c6162656c625069697369676e6174757265a1676b65794861736878386332373961336662336234653632626263373865323838373833623538303435643461653832613138383637643833353264303237373561707061796f75745570706572626f756e641b0000019ca7c484807076656e646f7245787069726174696f6e1b0000019e8156a600",
      ),
    );

    const result2 = toTxMetadata(fundMetadata);
    expect(result2.toCbor()).toEqual(
      Core.HexBlob(
        "a119069ea56840636f6e74657874781873756e6461652e66692f73616d706c652d636f6e746578746d68617368416c676f726974686d6b626c616b6532622d323536687478417574686f727838633237396133666233623465363262626337386532383837383362353830343564346165383261313838363764383335326430323737356168696e7374616e63657838373034343065623735373438366334646231353535396430633162323639396332306134613238623563363535383564353436383963333064626f6479a7656576656e746466756e64656c6162656c7253616d706c6520496e7374616e63652031326b6465736372697074696f6e781a54657374696e67206e657720696e646578696e6720636f6465216a6964656e746966696572726578616d706c652d6964656e7469666965726a6d696c6573746f6e657381a36a6964656e746966696572626d3172616363657074616e636543726974657269618a78404c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20457469616d206378406f6e736563746574757220637572737573206f64696f2c206e6f6e2070756c76696e617220697073756d206d61747469732061742e2041656e65616e206d6f6c78406573746965206d6175726973207175616d2c2065676574207068617265747261206f64696f20617563746f722076656c2e2055742076656e656e6174697320707840656c6c656e74657371756520656c656966656e642e20517569737175652073697420616d65742074656c6c7573207574206e69736c20706f727461206d617474784069732e204475697320757420756c74726963696573206c65637475732e20536564206c7563747573206f64696f206e65632070686172657472612074656d70757840732e2050686173656c6c75732068656e647265726974206d6173736120616320657261742070756c76696e61722c2069642076697665727261207075727573207840636f6e76616c6c69732e20566573746962756c756d2074696e636964756e74206c6f626f72746973206665726d656e74756d2e2053656420696d7065726469657840742c20697073756d206f726e61726520756c74726963657320736f6c6c696369747564696e2c20746f72746f72206e69626820756c7472696365732075726e6178402c206120736f6c6c696369747564696e20656c69742072697375732065676574207475727069732e205072616573656e7420656e696d206d617373612c20677278296176696461206e6f6e20666175636962757320612c20706f72747469746f722076697461652065782e6b6465736372697074696f6e8a78404c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20457469616d206378406f6e736563746574757220637572737573206f64696f2c206e6f6e2070756c76696e617220697073756d206d61747469732061742e2041656e65616e206d6f6c78406573746965206d6175726973207175616d2c2065676574207068617265747261206f64696f20617563746f722076656c2e2055742076656e656e6174697320707840656c6c656e74657371756520656c656966656e642e20517569737175652073697420616d65742074656c6c7573207574206e69736c20706f727461206d617474784069732e204475697320757420756c74726963696573206c65637475732e20536564206c7563747573206f64696f206e65632070686172657472612074656d70757840732e2050686173656c6c75732068656e647265726974206d6173736120616320657261742070756c76696e61722c2069642076697665727261207075727573207840636f6e76616c6c69732e20566573746962756c756d2074696e636964756e74206c6f626f72746973206665726d656e74756d2e2053656420696d7065726469657840742c20697073756d206f726e61726520756c74726963657320736f6c6c696369747564696e2c20746f72746f72206e69626820756c7472696365732075726e6178402c206120736f6c6c696369747564696e20656c69742072697375732065676574207475727069732e205072616573656e7420656e696d206d617373612c20677278296176696461206e6f6e20666175636962757320612c20706f72747469746f722076697461652065782e706f746865724964656e74696669657273836e6964656e7469666965722d6f6e656e6964656e7469666965722d74776f6b616e6f746865722d6f6e656676656e646f72a1656c6162656c827840616464725f7465737431717270386e676c6d3864387839773738336335673071613473707a616674357a35787978306b703439357038776b736a726c667a757a782c3668347373786c6d3738763075746c6772687279766c326776746770353361366a397a6e6771746a666b3673",
      ),
    );
  });
});

describe("fromMetadata", () => {
  it("should convert it to an object", async () => {
    const metadata = Core.Metadata.fromCbor(
      Core.HexBlob(
        "a119069ea56840636f6e74657874781873756e6461652e66692f73616d706c652d636f6e746578746d68617368416c676f726974686d6b626c616b6532622d323536687478417574686f727838633237396133666233623465363262626337386532383837383362353830343564346165383261313838363764383335326430323737356168696e7374616e63657838373034343065623735373438366334646231353535396430633162323639396332306134613238623563363535383564353436383963333064626f6479a8656576656e74677075626c697368656c6162656c7253616d706c6520496e7374616e636520313268736565645574786fa26b6f7574707574496e646578016d7472616e73616374696f6e49647840626565316165393465346162303039393063623135656133386231343161333333356633366461636330643536343232323462653564666134306131623464646a65787069726174696f6e1b0000019b77ed50806b6465736372697074696f6e781a54657374696e67206e657720696e646578696e6720636f6465216b7065726d697373696f6e73a76466756e646a72656f7267616e697a656570617573656a72656f7267616e697a656573776565706a72656f7267616e697a65666d6f646966796a72656f7267616e697a6566726573756d656a72656f7267616e697a656864697362757273656a72656f7267616e697a656a72656f7267616e697a65a2656c6162656c625069697369676e6174757265a1676b65794861736878386332373961336662336234653632626263373865323838373833623538303435643461653832613138383637643833353264303237373561707061796f75745570706572626f756e641b0000019ca7c484807076656e646f7245787069726174696f6e1b0000019e8156a600",
      ),
    );

    const result = await fromTxMetadata(metadata);
    expect(result).toMatchObject(publishMetadata);

    const metadata2 = Core.Metadata.fromCbor(
      Core.HexBlob(
        "a119069ea56840636f6e74657874781873756e6461652e66692f73616d706c652d636f6e746578746d68617368416c676f726974686d6b626c616b6532622d323536687478417574686f727838633237396133666233623465363262626337386532383837383362353830343564346165383261313838363764383335326430323737356168696e7374616e63657838373034343065623735373438366334646231353535396430633162323639396332306134613238623563363535383564353436383963333064626f6479a7656576656e746466756e64656c6162656c7253616d706c6520496e7374616e63652031326b6465736372697074696f6e781a54657374696e67206e657720696e646578696e6720636f6465216a6964656e746966696572726578616d706c652d6964656e7469666965726a6d696c6573746f6e657381a36a6964656e746966696572626d3172616363657074616e636543726974657269618a78404c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20457469616d206378406f6e736563746574757220637572737573206f64696f2c206e6f6e2070756c76696e617220697073756d206d61747469732061742e2041656e65616e206d6f6c78406573746965206d6175726973207175616d2c2065676574207068617265747261206f64696f20617563746f722076656c2e2055742076656e656e6174697320707840656c6c656e74657371756520656c656966656e642e20517569737175652073697420616d65742074656c6c7573207574206e69736c20706f727461206d617474784069732e204475697320757420756c74726963696573206c65637475732e20536564206c7563747573206f64696f206e65632070686172657472612074656d70757840732e2050686173656c6c75732068656e647265726974206d6173736120616320657261742070756c76696e61722c2069642076697665727261207075727573207840636f6e76616c6c69732e20566573746962756c756d2074696e636964756e74206c6f626f72746973206665726d656e74756d2e2053656420696d7065726469657840742c20697073756d206f726e61726520756c74726963657320736f6c6c696369747564696e2c20746f72746f72206e69626820756c7472696365732075726e6178402c206120736f6c6c696369747564696e20656c69742072697375732065676574207475727069732e205072616573656e7420656e696d206d617373612c20677278296176696461206e6f6e20666175636962757320612c20706f72747469746f722076697461652065782e6b6465736372697074696f6e8a78404c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20457469616d206378406f6e736563746574757220637572737573206f64696f2c206e6f6e2070756c76696e617220697073756d206d61747469732061742e2041656e65616e206d6f6c78406573746965206d6175726973207175616d2c2065676574207068617265747261206f64696f20617563746f722076656c2e2055742076656e656e6174697320707840656c6c656e74657371756520656c656966656e642e20517569737175652073697420616d65742074656c6c7573207574206e69736c20706f727461206d617474784069732e204475697320757420756c74726963696573206c65637475732e20536564206c7563747573206f64696f206e65632070686172657472612074656d70757840732e2050686173656c6c75732068656e647265726974206d6173736120616320657261742070756c76696e61722c2069642076697665727261207075727573207840636f6e76616c6c69732e20566573746962756c756d2074696e636964756e74206c6f626f72746973206665726d656e74756d2e2053656420696d7065726469657840742c20697073756d206f726e61726520756c74726963657320736f6c6c696369747564696e2c20746f72746f72206e69626820756c7472696365732075726e6178402c206120736f6c6c696369747564696e20656c69742072697375732065676574207475727069732e205072616573656e7420656e696d206d617373612c20677278296176696461206e6f6e20666175636962757320612c20706f72747469746f722076697461652065782e706f746865724964656e74696669657273836e6964656e7469666965722d6f6e656e6964656e7469666965722d74776f6b616e6f746865722d6f6e656676656e646f72a1656c6162656c827840616464725f7465737431717270386e676c6d3864387839773738336335673071613473707a616674357a35787978306b703439357038776b736a726c667a757a782c3668347373786c6d3738763075746c6772687279766c326776746770353361366a397a6e6771746a666b3673",
      ),
    );
    const result2 = await fromTxMetadata(metadata2);
    expect(result2).toMatchObject(fundMetadata);
  });
});
